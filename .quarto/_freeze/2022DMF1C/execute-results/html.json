{
  "hash": "b6243de4a60d66a812b0d533f1648714",
  "result": {
    "markdown": "---\ntitle: \"2022DMF1C Asia\"\nauthor: \"Luis Fernando Delgado\"\ndate: \"02/02/2023\"\n---\n\n\n# Introduction\n\nThis is a script about predictions in non-replicated trials with augmented checks. According to Salvador Gezan, the best way to make good predictions is to do a spatial analysis. See [Part 1](https://vsni.co.uk/blogs/unreplicated-trials-part-1) and [Part 2](https://vsni.co.uk/blogs/unreplicated-trials-part-2).\n\n## Load packages\n\nHere we check whether all necessary packages are installed in your computer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\n## Packages (install)\npkgs <- rownames(installed.packages())\nif(!\"tidyverse\" %in% pkgs) install.packages(\"tidyverse\")\nif(!\"here\" %in% pkgs) install.packages(\"here\")\nif(!\"statgenSTA\" %in% pkgs) install.packages(\"statgenSTA\")\nif(!\"statgenGxE\" %in% pkgs) install.packages(\"statgenGxE\")\nif(!\"openxlsx\" %in% pkgs) install.packages(\"openxlsx\")\nif(!\"asreml\" %in% pkgs) install.packages(\"asreml\")\nif(!\"SpATS\" %in% pkgs) install.packages(\"SpATS\")\n```\n:::\n\n\nThe code recognizes if certain packages are missing from your package library and, if so, will install them automatically.\n\nNow, we need to load the packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(statgenSTA)\nlibrary(statgenGxE)\nlibrary(openxlsx)\nlibrary(asreml)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOnline License checked out Mon Feb  6 18:14:15 2023\n```\n:::\n\n```{.r .cell-code}\nlibrary(SpATS)\n```\n:::\n\n\n## Load the functions of utilities_tidy on GitHub\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"https://raw.githubusercontent.com/Cassava2050/PPD/main/utilities_tidy.R\")\nsource(\"https://raw.githubusercontent.com/darizasu/work/master/scripts/ggCor.R\")\n\n# remember call the functions updated according to these colnames.\n```\n:::\n\n\n## Load the files to check\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlocal_file <- \"yes\" \n\nif (local_file == \"yes\") {\n  folder <- \"D:\\\\OneDrive - CGIAR\\\\Data Analysis\\\\2022DMF1C\\\\data\\\\\"\n  file <- \"phenotype.csv\"\n  skip_col <- 0 # double check the number of col skipped\n  trial_interest = \"DMF1C\"\n  year_interest <- 2021\n}\n# 1) load the data\nsel_data <- read_cassavabase(phenotypeFile = paste0(folder, file))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Here are the trials and the study interested is DMF1C\"\n```\n:::\n:::\n\n\n## Create the master_data file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaster_data <- list()\n```\n:::\n\n\n\nThe data are already tidy, there are two trials, each with an augmented design with diagonal checks. It is necessary add the trial_name col.\n\n## Add the trial name col\n\nThe locations are: Dong Nai and Tay Ninh. Both in Vietnam\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data <- sel_data %>% \n  mutate(trial_name = str_sub(plot_name, 1, 14)) %>% \n  relocate(trial_name, .before = plot_name)\n```\n:::\n\n\n## Double check design\n\nI will check the experimental design of each trial.\n\n### Duplications in row and cols\n\nI had to modified the preloaded functions, because the data are already tidy and did no have the words \"use_\" and \"obs_\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"modified_functions.R\") # I wrote a new utilities file because variables did not come from cassava base\nduplicated_plot <- row_col_dup(sel_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Good, there is no duplicated combination of row and column.\"\n```\n:::\n:::\n\n\n### Visualize layout\n\nIt is necessary fix the zeros in column \"is_a_control\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data$is_a_control[sel_data$is_a_control == 0] <- NA\n```\n:::\n\n\nReplace factors in \"is_a_control\" var into check and test, then rename the column as \"check test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data <- sel_data %>% \n   mutate(is_a_control = replace(is_a_control, is_a_control == 1, \"check\")) %>% \n   mutate(is_a_control = replace_na(is_a_control, \"test\")) %>% \n   rename(\"check_test\" = is_a_control)\n```\n:::\n\n\nPlotting the layout\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrial_layout(sel_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n# add family factor\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data <- sel_data %>%  \n  separate(accession_name, into = c(\"family_name\", \"offspring\"), \n           sep = \"-\", remove = F)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 35 rows [9, 18,\n24, 33, 42, 57, 66, 72, 81, 96, 129, 135, 144, 159, 168, 183, 192, 207, 216,\n225, ...].\n```\n:::\n\n```{.r .cell-code}\nchecks <- sel_data %>% \n  filter(check_test == \"check\") %>% \n  distinct(accession_name) %>% \n  pull()\n\nsel_data <- \n  sel_data %>%\n  mutate(family_name = ifelse(accession_name %in% checks, NA, family_name)) %>% \n  dplyr::select(-offspring) \n```\n:::\n\n\nDelete the NA values of family names from checks and replace with word \"check\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data <- sel_data %>% mutate(\n  family_name = ifelse(is.na(family_name), \"check\", family_name),\n  family_name = as.factor(family_name)\n)\n```\n:::\n\n\n# Layout family names\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrial_layout_family(sel_data)\n```\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n\n\nFix the data in column 1 and 2 2022DMF1C_dona trial, according to Xiaofei's comments; I;m going to remove col 1 and 2 from 2022DMF1C_dona trial\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndona <- sel_data %>% filter(trial_name == \"2022DMF1C_dona\", !col_number %in% c(1,2))\n\nsel_data <- sel_data %>% filter(!trial_name == \"2022DMF1C_dona\") %>% \n  bind_rows(dona)\n\ntrial_layout_family(sel_data)\n```\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nmaster_data[[\"tidy_data\"]] <- sel_data\n```\n:::\n\n\n## Boxplot \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ideal traits out.width = '60%', fig.height=8, fig.width=8\ntrait_ideal <- colnames(sel_data[c(13:18, 22:26, 31, 33)])\n\n\nplot_bxp <- sel_data %>%\n  pivot_longer(\n    cols = all_of(trait_ideal),\n    names_to = \"var\",\n    values_to = \"values\"\n  ) %>%\n  ggplot(aes(x = trial_name, y = values)) +\n  geom_violin(trim = FALSE, fill = \"gray\") +\n  geom_boxplot(width = 0.2, trim = FALSE) +\n  labs(x = NULL, y = NULL, title = \"Dong Nai location\") +\n  theme_xiaofei() +\n  theme(\n    axis.text.x = element_text(size = 8, vjust = 1),\n    axis.text.y = element_text(size = 8),\n    plot.title = element_text(color = \"black\"),\n    \n  ) +\n  facet_wrap(~var,\n    ncol = 3, scales = \"free_y\"#,\n    #labeller = as_labeller(fct_labels)\n  ) +\n  theme(\n    strip.text.x = element_text(\n      size = 12, face = \"bold.italic\"\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_boxplot(width = 0.2, trim = FALSE): Ignoring unknown parameters:\n`trim`\n```\n:::\n\n```{.r .cell-code}\n# labs(caption = \"Trial name: Year + trial number + pipeline + trial type + location + months after planting\")\nplot_bxp\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 315 rows containing non-finite values (`stat_ydensity()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 315 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Summary tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 1\nfor (var in trait_ideal) {\n  # summary tables\n  summ <- sel_data %>%\n    distinct(trial_name, plot_name, rep_number, accession_name, .data[[var]]) %>%\n    group_by(trial_name) %>%\n    summarise(\n      n_gen = n_distinct(accession_name),\n      n_reps = n_distinct(rep_number),\n      n_total = n(),\n      n_missing = sum(is.na(.data[[var]])),\n      n_percent = n_missing / n_total,\n      zeros = sum(.data[[var]] == 0, na.rm = TRUE),\n      rcbd = ifelse(n_reps > 1, TRUE, FALSE),\n      design = ifelse(n_reps == 1, \"unrep\", design)\n    ) %>%\n    type.convert() %>%\n    arrange(n_gen)\n  summ <- summ %>%\n    as.data.frame() %>%\n    mutate(trait = var)\n  if (i == 1) {\n    resum_tables <- summ\n  } else {\n    resum_tables <- rbind.data.frame(resum_tables, summ)\n  }\n  i <- i + 1\n  \n  master_data[[paste0(\"summary_\", trial_interest)]] <- resum_tables\n}\n```\n:::\n\n\n# Spatial Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# factor\nsel_data$family_name = as.factor(sel_data$family_name)\nsel_data$accession_name = as.factor(sel_data$accession_name)\n\n# create a factor of row and cols\nsel_data$R <- as.factor(sel_data$row_number)\nsel_data$C <- as.factor(sel_data$col_number)\n```\n:::\n\n\n# Dong Nai location \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data_dona <- sel_data %>% filter(trial_name == \"2022DMF1C_dona\")\n# n segments\nncols = length(unique(sel_data_dona$C))\nnrows = length(unique(sel_data_dona$R))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngen = \"accession_name\"\n\ni <- 1\nfor (trait in trait_ideal) {\n  mo_spatial <- SpATS(\n    response = trait,\n    genotype = \"accession_name\",\n    genotype.as.random = T,\n    fixed = NULL,\n    spatial = ~ PSANOVA(col_number,\n      row_number,\n      nseg = c(ncols, nrows),\n      degree = c(3, 3),\n      nest.div = 2\n    ),\n    random = ~ R + C,\n    data = sel_data_dona,\n    control = list(tolerance = 1e-03, monitoring = 1)\n  )\n\n\n  plot(mo_spatial)\n  var.m0 <- variogram(mo_spatial)\n  plot(var.m0)\n\n  ng <- length(mo_spatial$terms$geno$geno_names)\n\n  g.SpATS <-\n    mo_spatial$coeff[1:ng] %>%\n    data.frame(coeff = .) %>%\n    rownames_to_column(gen) %>%\n    mutate(\n      variable = trait,\n      BLUP = mo_spatial$fitted[1:ng]\n    ) %>%\n    filter(accession_name %in% sel_data_dona$accession_name) %>%\n    select(-coeff)\n  \n  spat_h2 <- getHeritability(mo_spatial)\n\n  if (i == 1) {\n    pvals_table <- g.SpATS\n  } else {\n    pvals_table <- rbind.data.frame(pvals_table, g.SpATS)\n  }\n\n  i <- i + 1\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.58 seconds\nAll process 0.62 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.78 seconds\nAll process 0.82 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.33 seconds\nAll process 0.35 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.41 seconds\nAll process 0.43 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-8.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 1.32 seconds\nAll process 1.36 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-10.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.29 seconds\nAll process 0.31 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-12.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.49 seconds\nAll process 0.49 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-14.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.26 seconds\nAll process 0.3 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-16.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.19 seconds\nAll process 0.21 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-18.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.25 seconds\nAll process 0.28 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-20.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.25 seconds\nAll process 0.27 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-21.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-22.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.17 seconds\nAll process 0.19 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-23.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-24.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nTimings:\nSpATS 0.18 seconds\nAll process 0.2 seconds\n```\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-25.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](2022DMF1C_files/figure-html/unnamed-chunk-19-26.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neqt_fixed <- reformulate(c(\"season\", \"accession_name\"), response = var)\n  met_model_f  <- asreml( eqt_fixed,\n                        random = ~ season:accession_name + at(season, row_col):rep_number +\n                          at(season, row_col):col_f + at(season, row_col):row_f,\n                        residual =  ~ units ,\n                        data = tmp_data, trace = 0) # workspace = \"4gb\"\n  met_model_f  <- update.asreml(met_model_f )\n  met_model_f  <- update.asreml(met_model_f )\n  pred_f <- predict(met_model_f , classify = \"accession_name\")\n  PP_f <- pred_f$pvals %>% mutate(variable = var)\n\n  sel_data_dona$check_test <- as.factor(sel_data_dona$check_test)\n  \nmodel <- asreml::asreml(\n  fixed = trait ~ 1 + at(check_test, \"check\"):gen,\n  random = ~ +at(check_test, \"test\"):gen,\n  residual = ~ ar1v(row_number):ar1v(col_number),\n  data = sel_data_dona\n  \n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data_dona %>% select(accession_name, Root_Weight) %>% \n  rename(\"raw_root_weight\" = Root_Weight) %>% \n  full_join(pvals_table %>% filter(variable == \"Root_Weight\"), \n            by = \"accession_name\") %>% \n  select(-variable) %>% \n  pivot_longer(!accession_name, names_to = \"estimate\", values_to = \"root_weight\") %>% \n  ggplot(aes(x = accession_name, y = root_weight)) +\n  geom_boxplot() + \n  theme_xiaofei()\n```\n:::\n\n\n\nI need to finish all code and upload to GitHub, Xiaofei wants to check it.\n\n\n\n\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# factor\nsel_data$family_name = as.factor(sel_data$family_name)\nsel_data$accession_name = as.factor(sel_data$accession_name)\n\n# create a factor of row and cols\nsel_data$R <- as.factor(sel_data$row_number)\nsel_data$C <- as.factor(sel_data$col_number)\n\n\n\nsel_data_tani <- sel_data %>% filter(trial_name == \"2022DMF1C_tani\")\n#write.csv(sel_data_tani, \"sel_data_tani.csv\")\n```\n:::\n\n\n# Dong Nai location \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsel_data_dona <- sel_data %>% filter(trial_name == \"2022DMF1C_dona\")\n# n segments\nncols = length(unique(sel_data_dona$C))\nnrows = length(unique(sel_data_dona$R))\n```\n:::\n",
    "supporting": [
      "2022DMF1C_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}